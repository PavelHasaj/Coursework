<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet" targetNamespace="http://tempuri.org/Database1DataSet.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet.xsd" xmlns="http://tempuri.org/Database1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Coursework_Practic.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisciplinesTableAdapter" GeneratorDataComponentClassName="DisciplinesTableAdapter" Name="Disciplines" UserDataComponentName="DisciplinesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Disciplines" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Disciplines] WHERE (([Discipline_Id] = @Original_Discipline_Id) AND ([Discipline_Name] = @Original_Discipline_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Discipline_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Discipline_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Discipline_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Discipline_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Disciplines] ([Discipline_Id], [Discipline_Name]) VALUES (@Discipline_Id, @Discipline_Name);
SELECT Discipline_Id, Discipline_Name FROM Disciplines WHERE (Discipline_Id = @Discipline_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Discipline_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Discipline_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Discipline_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Discipline_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Discipline_Id, Discipline_Name FROM dbo.Disciplines</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Disciplines] SET [Discipline_Id] = @Discipline_Id, [Discipline_Name] = @Discipline_Name WHERE (([Discipline_Id] = @Original_Discipline_Id) AND ([Discipline_Name] = @Original_Discipline_Name));
SELECT Discipline_Id, Discipline_Name FROM Disciplines WHERE (Discipline_Id = @Discipline_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Discipline_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Discipline_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Discipline_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Discipline_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Discipline_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Discipline_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Discipline_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Discipline_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Discipline_Id" DataSetColumn="Discipline_Id" />
              <Mapping SourceColumn="Discipline_Name" DataSetColumn="Discipline_Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Groups] WHERE (([Group_ID] = @Original_Group_ID) AND ([Group_Name] = @Original_Group_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Group_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Groups] ([Group_ID], [Group_Name]) VALUES (@Group_ID, @Group_Name);
SELECT Group_ID, Group_Name FROM Groups WHERE (Group_ID = @Group_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Group_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Group_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Group_ID, Group_Name FROM dbo.Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Groups] SET [Group_ID] = @Group_ID, [Group_Name] = @Group_Name WHERE (([Group_ID] = @Original_Group_ID) AND ([Group_Name] = @Original_Group_Name));
SELECT Group_ID, Group_Name FROM Groups WHERE (Group_ID = @Group_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Group_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Group_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Group_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Group_ID" DataSetColumn="Group_ID" />
              <Mapping SourceColumn="Group_Name" DataSetColumn="Group_Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SyllabusTableAdapter" GeneratorDataComponentClassName="SyllabusTableAdapter" Name="Syllabus" UserDataComponentName="SyllabusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Syllabus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Syllabus] WHERE (([Id_zap] = @Original_Id_zap) AND ([GroupID] = @Original_GroupID) AND ([TeacherID] = @Original_TeacherID) AND ([DisciplineID] = @Original_DisciplineID) AND ([Number_of_hours] = @Original_Number_of_hours) AND ([Class_time] = @Original_Class_time))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_zap" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_zap" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DisciplineID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Number_of_hours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number_of_hours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_Class_time" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="Class_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Syllabus] ([Id_zap], [GroupID], [TeacherID], [DisciplineID], [Number_of_hours], [Class_time]) VALUES (@Id_zap, @GroupID, @TeacherID, @DisciplineID, @Number_of_hours, @Class_time);
SELECT Id_zap, GroupID, TeacherID, DisciplineID, Number_of_hours, Class_time FROM Syllabus WHERE (Id_zap = @Id_zap)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_zap" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_zap" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DisciplineID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Number_of_hours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number_of_hours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Class_time" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="Class_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_zap, GroupID, TeacherID, DisciplineID, Number_of_hours, Class_time FROM dbo.Syllabus</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Syllabus] SET [Id_zap] = @Id_zap, [GroupID] = @GroupID, [TeacherID] = @TeacherID, [DisciplineID] = @DisciplineID, [Number_of_hours] = @Number_of_hours, [Class_time] = @Class_time WHERE (([Id_zap] = @Original_Id_zap) AND ([GroupID] = @Original_GroupID) AND ([TeacherID] = @Original_TeacherID) AND ([DisciplineID] = @Original_DisciplineID) AND ([Number_of_hours] = @Original_Number_of_hours) AND ([Class_time] = @Original_Class_time));
SELECT Id_zap, GroupID, TeacherID, DisciplineID, Number_of_hours, Class_time FROM Syllabus WHERE (Id_zap = @Id_zap)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_zap" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_zap" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DisciplineID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Number_of_hours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number_of_hours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Class_time" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="Class_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_zap" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_zap" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DisciplineID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Number_of_hours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number_of_hours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_Class_time" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="Class_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_zap" DataSetColumn="Id_zap" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="TeacherID" DataSetColumn="TeacherID" />
              <Mapping SourceColumn="DisciplineID" DataSetColumn="DisciplineID" />
              <Mapping SourceColumn="Number_of_hours" DataSetColumn="Number_of_hours" />
              <Mapping SourceColumn="Class_time" DataSetColumn="Class_time" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachersTableAdapter" GeneratorDataComponentClassName="TeachersTableAdapter" Name="Teachers" UserDataComponentName="TeachersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Teachers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teachers] WHERE (([Teacher_ID] = @Original_Teacher_ID) AND ([Teacher_FullName] = @Original_Teacher_FullName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Teacher_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Teacher_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher_FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teachers] ([Teacher_ID], [Teacher_FullName]) VALUES (@Teacher_ID, @Teacher_FullName);
SELECT Teacher_ID, Teacher_FullName FROM Teachers WHERE (Teacher_ID = @Teacher_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Teacher_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Teacher_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher_FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Teacher_ID, Teacher_FullName FROM dbo.Teachers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teachers] SET [Teacher_ID] = @Teacher_ID, [Teacher_FullName] = @Teacher_FullName WHERE (([Teacher_ID] = @Original_Teacher_ID) AND ([Teacher_FullName] = @Original_Teacher_FullName));
SELECT Teacher_ID, Teacher_FullName FROM Teachers WHERE (Teacher_ID = @Teacher_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Teacher_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Teacher_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher_FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Teacher_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Teacher_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Teacher_FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Teacher_ID" DataSetColumn="Teacher_ID" />
              <Mapping SourceColumn="Teacher_FullName" DataSetColumn="Teacher_FullName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database1DataSet" msprop:Generator_UserDSName="Database1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Disciplines" msprop:Generator_TableClassName="DisciplinesDataTable" msprop:Generator_TableVarName="tableDisciplines" msprop:Generator_TablePropName="Disciplines" msprop:Generator_RowDeletingName="DisciplinesRowDeleting" msprop:Generator_RowChangingName="DisciplinesRowChanging" msprop:Generator_RowEvHandlerName="DisciplinesRowChangeEventHandler" msprop:Generator_RowDeletedName="DisciplinesRowDeleted" msprop:Generator_UserTableName="Disciplines" msprop:Generator_RowChangedName="DisciplinesRowChanged" msprop:Generator_RowEvArgName="DisciplinesRowChangeEvent" msprop:Generator_RowClassName="DisciplinesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Discipline_Id" msprop:Generator_ColumnVarNameInTable="columnDiscipline_Id" msprop:Generator_ColumnPropNameInRow="Discipline_Id" msprop:Generator_ColumnPropNameInTable="Discipline_IdColumn" msprop:Generator_UserColumnName="Discipline_Id" type="xs:int" />
              <xs:element name="Discipline_Name" msprop:Generator_ColumnVarNameInTable="columnDiscipline_Name" msprop:Generator_ColumnPropNameInRow="Discipline_Name" msprop:Generator_ColumnPropNameInTable="Discipline_NameColumn" msprop:Generator_UserColumnName="Discipline_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Groups" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_TableVarName="tableGroups" msprop:Generator_TablePropName="Groups" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_UserTableName="Groups" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_RowClassName="GroupsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Group_ID" msprop:Generator_ColumnVarNameInTable="columnGroup_ID" msprop:Generator_ColumnPropNameInRow="Group_ID" msprop:Generator_ColumnPropNameInTable="Group_IDColumn" msprop:Generator_UserColumnName="Group_ID" type="xs:int" />
              <xs:element name="Group_Name" msprop:Generator_ColumnVarNameInTable="columnGroup_Name" msprop:Generator_ColumnPropNameInRow="Group_Name" msprop:Generator_ColumnPropNameInTable="Group_NameColumn" msprop:Generator_UserColumnName="Group_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Syllabus" msprop:Generator_TableClassName="SyllabusDataTable" msprop:Generator_TableVarName="tableSyllabus" msprop:Generator_TablePropName="Syllabus" msprop:Generator_RowDeletingName="SyllabusRowDeleting" msprop:Generator_RowChangingName="SyllabusRowChanging" msprop:Generator_RowEvHandlerName="SyllabusRowChangeEventHandler" msprop:Generator_RowDeletedName="SyllabusRowDeleted" msprop:Generator_UserTableName="Syllabus" msprop:Generator_RowChangedName="SyllabusRowChanged" msprop:Generator_RowEvArgName="SyllabusRowChangeEvent" msprop:Generator_RowClassName="SyllabusRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_zap" msprop:Generator_ColumnVarNameInTable="columnId_zap" msprop:Generator_ColumnPropNameInRow="Id_zap" msprop:Generator_ColumnPropNameInTable="Id_zapColumn" msprop:Generator_UserColumnName="Id_zap" type="xs:int" />
              <xs:element name="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" type="xs:int" />
              <xs:element name="TeacherID" msprop:Generator_ColumnVarNameInTable="columnTeacherID" msprop:Generator_ColumnPropNameInRow="TeacherID" msprop:Generator_ColumnPropNameInTable="TeacherIDColumn" msprop:Generator_UserColumnName="TeacherID" type="xs:int" />
              <xs:element name="DisciplineID" msprop:Generator_ColumnVarNameInTable="columnDisciplineID" msprop:Generator_ColumnPropNameInRow="DisciplineID" msprop:Generator_ColumnPropNameInTable="DisciplineIDColumn" msprop:Generator_UserColumnName="DisciplineID" type="xs:int" />
              <xs:element name="Number_of_hours" msprop:Generator_ColumnVarNameInTable="columnNumber_of_hours" msprop:Generator_ColumnPropNameInRow="Number_of_hours" msprop:Generator_ColumnPropNameInTable="Number_of_hoursColumn" msprop:Generator_UserColumnName="Number_of_hours" type="xs:int" />
              <xs:element name="Class_time" msprop:Generator_ColumnVarNameInTable="columnClass_time" msprop:Generator_ColumnPropNameInRow="Class_time" msprop:Generator_ColumnPropNameInTable="Class_timeColumn" msprop:Generator_UserColumnName="Class_time" type="xs:duration" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teachers" msprop:Generator_TableClassName="TeachersDataTable" msprop:Generator_TableVarName="tableTeachers" msprop:Generator_TablePropName="Teachers" msprop:Generator_RowDeletingName="TeachersRowDeleting" msprop:Generator_RowChangingName="TeachersRowChanging" msprop:Generator_RowEvHandlerName="TeachersRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachersRowDeleted" msprop:Generator_UserTableName="Teachers" msprop:Generator_RowChangedName="TeachersRowChanged" msprop:Generator_RowEvArgName="TeachersRowChangeEvent" msprop:Generator_RowClassName="TeachersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Teacher_ID" msprop:Generator_ColumnVarNameInTable="columnTeacher_ID" msprop:Generator_ColumnPropNameInRow="Teacher_ID" msprop:Generator_ColumnPropNameInTable="Teacher_IDColumn" msprop:Generator_UserColumnName="Teacher_ID" type="xs:int" />
              <xs:element name="Teacher_FullName" msprop:Generator_ColumnVarNameInTable="columnTeacher_FullName" msprop:Generator_ColumnPropNameInRow="Teacher_FullName" msprop:Generator_ColumnPropNameInTable="Teacher_FullNameColumn" msprop:Generator_UserColumnName="Teacher_FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Disciplines" />
      <xs:field xpath="mstns:Discipline_Id" />
    </xs:unique>
    <xs:unique name="Groups_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:Group_ID" />
    </xs:unique>
    <xs:unique name="Syllabus_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Syllabus" />
      <xs:field xpath="mstns:Id_zap" />
    </xs:unique>
    <xs:unique name="Teachers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teachers" />
      <xs:field xpath="mstns:Teacher_ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Syllabus_Disciplines" msdata:parent="Disciplines" msdata:child="Syllabus" msdata:parentkey="Discipline_Id" msdata:childkey="DisciplineID" msprop:Generator_UserChildTable="Syllabus" msprop:Generator_ChildPropName="GetSyllabusRows" msprop:Generator_UserRelationName="FK_Syllabus_Disciplines" msprop:Generator_ParentPropName="DisciplinesRow" msprop:Generator_RelationVarName="relationFK_Syllabus_Disciplines" msprop:Generator_UserParentTable="Disciplines" />
      <msdata:Relationship name="FK_Syllabus_Groups" msdata:parent="Groups" msdata:child="Syllabus" msdata:parentkey="Group_ID" msdata:childkey="GroupID" msprop:Generator_UserChildTable="Syllabus" msprop:Generator_ChildPropName="GetSyllabusRows" msprop:Generator_UserRelationName="FK_Syllabus_Groups" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_RelationVarName="relationFK_Syllabus_Groups" msprop:Generator_UserParentTable="Groups" />
      <msdata:Relationship name="FK_Syllabus_Teachers" msdata:parent="Teachers" msdata:child="Syllabus" msdata:parentkey="Teacher_ID" msdata:childkey="TeacherID" msprop:Generator_UserChildTable="Syllabus" msprop:Generator_ChildPropName="GetSyllabusRows" msprop:Generator_UserRelationName="FK_Syllabus_Teachers" msprop:Generator_RelationVarName="relationFK_Syllabus_Teachers" msprop:Generator_UserParentTable="Teachers" msprop:Generator_ParentPropName="TeachersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>